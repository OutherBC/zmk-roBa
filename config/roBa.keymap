#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        kagikakkoL {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <12 13>;
        };

        kagikakkoR {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        marukakkoL {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <13 11>;
        };

        marukakkoR {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 20>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <8 9>;
        };

        kana {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <30 31>;
        };

        eisu {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <25 24>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        screenshot: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_WIN &kp KP_NUMBER_4>,
                <&macro_release>;

            label = "NEW_MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W      &kp E           &kp R  &kp T                                                     &kp Y            &kp U  &kp I        &kp O    &kp P
&kp A         &kp S      &kp D           &kp F  &kp G      &lt 6 LC(UP_ARROW)      &kp RC(DOWN_ARROW)     &kp H            &kp J  &kp K        &kp L    &lt 3 MINUS
&kp Z         &kp X      &kp C           &kp V  &kp B      &kp LEFT_ALT            &kp RIGHT_ALT          &kp N            &kp M  &lt 5 COMMA  &kp DOT  &lt 6 DELETE
&kp LEFT_GUI  &kp LCTRL  &kp LG(LS(N4))  &mo 5  &lt 1 TAB  &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT ENTER  &lt 5 BACKSPACE                               &kp ESCAPE
            >;
        };

        num1 {
            bindings = <
&kp KP_NUMBER_1    &kp KP_NUMBER_2       &kp KP_NUMBER_3  &kp KP_NUMBER_4        &kp KP_NUMBER_5                                        &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
&kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp HASH         &kp RIGHT_BRACKET      &kp SINGLE_QUOTE  &trans           &trans              &kp PLUS         &kp ASTERISK     &kp SLASH        &kp PERCENT      &kp EQUAL
&kp AMPERSAND      &kp LEFT_PARENTHESIS  &kp AT_SIGN      &kp RIGHT_PARENTHESIS  &kp DOLLAR        &kp LC(RIGHT)    &kp LC(LEFT_ARROW)  &kp UNDERSCORE   &kp LEFT_BRACE   &kp COLON        &kp RIGHT_BRACE  &kp SEMICOLON
&kp CARET          &kp TILDE             &kp LC(GRAVE)    &trans                 &trans            &trans           &kp BACKSPACE       &kp DELETE                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        noNUM {
            bindings = <
&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5                                     &kp AMPERSAND   &kp AT           &kp PLUS   &kp ASTERISK  &kp SEMI
&kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp LC(LA(KP_NUMBER_0))    &trans  &kp EQUAL       &kp EXCLAMATION  &kp MINUS  &kp QUESTION  &kp MINUS
&kp LEFT_SHIFT   &kp PLUS         &kp MINUS        &kp ASTERISK     &kp SLASH        &trans                     &trans  &kp UNDERSCORE  &kp SLASH        &kp COLON  &kp PERCENT   &kp QUESTION
&trans           &trans           &trans           &trans           &trans           &trans                     &trans  &kp DELETE                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        mouse1 {
            bindings = <
&kp LG(Q)  &kp LG(W)  &trans     &trans     &kp LG(T)                       &trans         &kp RG(LEFT_BRACKET)  &trans    &kp RG(RIGHT_BRACKET)  &trans
&kp LG(A)  &kp LG(S)  &trans     &kp LG(F)  &trans     &trans    &trans     &trans         &mkp MB1              &mkp MB3  &mkp MB2               &trans
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(B)  &trans    &trans     &trans         &kp LC(LS(TAB))       &trans    &kp LC(TAB)            &trans
&trans     &trans     &trans     &trans     &trans     &trans    &kp RG(W)  &kp BACKSPACE                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        noMOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Scroll {
            bindings = <
&trans  &trans          &trans         &trans          &trans                                             &trans  &kp LG(LEFT_ARROW)  &kp UP_ARROW    &kp LG(RIGHT_ARROW)  &kp QUESTION
&trans  &kp LANGUAGE_2  &kp LC(SPACE)  &kp LANGUAGE_1  &trans  &trans                 &trans              &trans  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp EXCLAMATION
&trans  &trans          &trans         &trans          &trans  &kp RC(RIGHT_ARROW)    &kp RC(LEFT_ARROW)  &trans  &kp PAGE_DOWN       &trans          &kp PAGE_UP          &trans
&trans  &trans          &trans         &trans          &trans  &trans                 &trans              &trans                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(RIGHT_ARROW) LC(LEFT_ARROW)>;
        };

        layer_6 {
            bindings = <
&trans          &trans          &trans       &trans  &trans                    &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4
&kp LC(LS(A))   &kp LG(LS(N4))  &trans       &trans  &trans  &trans    &trans  &trans        &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans
&trans          &trans          &trans       &trans  &trans  &trans    &trans  &trans        &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans
&bt BT_CLR_ALL  &bt BT_CLR      &bootloader  &trans  &trans  &trans    &trans  &trans                                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(C_VOLUME_UP) LC(C_VOLUME_DOWN)>;
        };
    };
};
